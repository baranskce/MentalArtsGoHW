{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/album": {
            "post": {
                "description": "Adds a new album to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Create a new album",
                "parameters": [
                    {
                        "description": "New Album Info",
                        "name": "album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Album"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Album"
                        }
                    }
                }
            }
        },
        "/album/{id}": {
            "get": {
                "description": "Returns the album with the specified ID as JSON.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Get an album by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Album"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of an existing album.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Update an album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Album Info",
                        "name": "album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Album"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Album"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the album with the specified ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Delete an album by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/albums": {
            "get": {
                "description": "Returns a list of all albums as JSON.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Get all albums",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Album"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes all albums from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Delete all albums",
                "responses": {
                    "200": {
                        "description": "All albums deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/musicians": {
            "get": {
                "description": "Returns a list of all musicians.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Musician"
                ],
                "summary": "Retrieve all musicians",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Musician"
                            }
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new musician to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Musician"
                ],
                "summary": "Create a new musician",
                "parameters": [
                    {
                        "description": "Musician Info",
                        "name": "musician",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Musician"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Musician"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes all musicians from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Musician"
                ],
                "summary": "Delete all musicians",
                "responses": {
                    "200": {
                        "description": "All musicians deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/musicians/{id}": {
            "get": {
                "description": "Returns a single musician by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Musician"
                ],
                "summary": "Retrieve a musician by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Musician ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Musician"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing musician's information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Musician"
                ],
                "summary": "Update a musician",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Musician ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Musician Info",
                        "name": "musician",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Musician"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Musician"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the musician with the specified ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Musician"
                ],
                "summary": "Delete a musician by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Musician ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Musician deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Album": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "musician": {
                    "$ref": "#/definitions/models.Musician"
                },
                "musicianID": {
                    "type": "string"
                },
                "releaseYear": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Musician": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}